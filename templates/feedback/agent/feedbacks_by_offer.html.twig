{% extends 'base.html.twig' %}

{% block title %}Feedbacks de l'offre {{ offerType|capitalize }}{% endblock %}

{% block body %}
<div class="section bg-light py-5">
  <div class="container">

    <!-- 🔙 Retour -->
    <div class="d-flex justify-content-between align-items-center mb-4">
      <h2>
        <i class="fa fa-comments text-info"></i>
        Feedbacks - {{ offerType|capitalize }} n°{{ offerId }}
      </h2>
      <a href="{{ path('feedback_index') }}" class="btn btn-secondary">
        ⬅️ Retour aux offres
      </a>
    </div>

    <!-- 🔽 Formulaire de tri -->
    <form method="get" class="row g-2 mb-4">
      <input type="hidden" name="search" value="{{ app.request.get('search') }}">

      <div class="col-md-4">
        <select name="sort" class="form-select">
          <option value="date" {{ app.request.get('sort') == 'date' ? 'selected' }}>📅 Date</option>
          <option value="rating" {{ app.request.get('sort') == 'rating' ? 'selected' }}>⭐ Note</option>
        </select>
      </div>

      <div class="col-md-3">
        <select name="dir" class="form-select">
          <option value="ASC" {{ app.request.get('dir') == 'ASC' ? 'selected' }}>⬆️ Croissant</option>
          <option value="DESC" {{ app.request.get('dir') == 'DESC' ? 'selected' }}>⬇️ Décroissant</option>
        </select>
      </div>

      <div class="col-md-2">
        <button type="submit" class="btn btn-primary text-white w-100">🎯 Appliquer</button>
      </div>
    </form>

    {% if feedbacks is not empty %}
      <div class="table-responsive">
        <table class="table table-bordered table-hover align-middle shadow-sm">
          <thead class="table-dark text-center">
            <tr>
              <th>Utilisateur</th>
              <th>Message</th>
              <th>Note</th>
              <th>Date</th>
            </tr>
          </thead>
          <tbody id="feedback-table-body">
            {# Les lignes seront injectées ici par JavaScript #}
          </tbody>
        </table>
      </div>

      <!-- 🔘 Pagination -->
      <div id="pagination" class="text-center mt-4"></div>

    {% else %}
      <div class="alert alert-warning text-center">
        🚫 Aucun feedback trouvé pour cette offre.
      </div>
    {% endif %}

  </div>
</div>

{% if feedbacks is not empty %}
<script>
  const feedbacks = [
    {% for f in feedbacks %}
      {
        user: "{{ f.userid.email|e('js') }}",
        message: "{{ f.message|e('js') }}",
        rating: {{ f.rating }},
        date: "{{ f.date ? f.date|date('Y-m-d') : '—' }}"
      },
    {% endfor %}
  ];

  const itemsPerPage = 5;
  let currentPage = 1;

  function renderTable(page) {
    const start = (page - 1) * itemsPerPage;
    const end = start + itemsPerPage;
    const sliced = feedbacks.slice(start, end);

    const tableBody = document.getElementById('feedback-table-body');
    tableBody.innerHTML = '';

    sliced.forEach(fb => {
      const row = `
        <tr>
          <td class="text-center">${fb.user}</td>
          <td>${fb.message}</td>
          <td class="text-center">${fb.rating}/5</td>
          <td class="text-center">${fb.date}</td>
        </tr>
      `;
      tableBody.innerHTML += row;
    });
  }

  function renderPagination(totalItems) {
    const totalPages = Math.ceil(totalItems / itemsPerPage);
    const container = document.getElementById('pagination');
    container.innerHTML = '';

    for (let i = 1; i <= totalPages; i++) {
      const btn = document.createElement('button');
      btn.textContent = i;
      btn.className = 'btn btn-sm mx-1 ' + (i === currentPage ? 'btn-primary' : 'btn-outline-primary');
      btn.addEventListener('click', () => {
        currentPage = i;
        renderTable(currentPage);
        renderPagination(feedbacks.length);
      });
      container.appendChild(btn);
    }
  }

  document.addEventListener('DOMContentLoaded', function () {
    renderTable(currentPage);
    renderPagination(feedbacks.length);
  });
</script>
{% endif %}
{% endblock %}
