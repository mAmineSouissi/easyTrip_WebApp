{% extends 'admin/base.html.twig' %}

{% block title %}Gérer les réservations{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .action-buttons {
            display: flex;
            gap: 0.5rem;
            justify-content: flex-end;
        }

        .btn-action {
            display: inline-flex !important;
            align-items: center !important;
            gap: 0.5rem !important;
            padding: 0.5rem 1rem !important;
            font-size: 0.9rem !important;
            font-weight: 600 !important;
            text-transform: uppercase !important;
            letter-spacing: 0.5px !important;
            border-radius: 0.5rem !important;
            transition: all 0.3s ease !important;
            cursor: pointer !important;
            text-decoration: none !important;
            border: none !important;
            min-width: 120px !important;
            justify-content: center !important;
        }

        .btn-edit {
            background: linear-gradient(145deg, #2563eb, #3b82f6) !important;
            color: white !important;
            box-shadow: 0 2px 4px rgba(37, 99, 235, 0.2) !important;
        }

        .btn-edit:hover {
            transform: translateY(-2px) !important;
            box-shadow: 0 4px 6px rgba(37, 99, 235, 0.3) !important;
        }

        .btn-delete {
            background: linear-gradient(145deg, #dc2626, #ef4444) !important;
            color: white !important;
            box-shadow: 0 2px 4px rgba(220, 38, 38, 0.2) !important;
        }

        .btn-delete:hover {
            transform: translateY(-2px) !important;
            box-shadow: 0 4px 6px rgba(220, 38, 38, 0.3) !important;
        }

        .btn-action i {
            font-size: 1rem !important;
            transition: transform 0.3s ease !important;
        }

        .btn-edit:hover i {
            transform: rotate(360deg) !important;
        }

        .btn-delete:hover i {
            transform: rotate(90deg) !important;
        }

        .table td {
            vertical-align: middle !important;
        }

        .car-image {
            width: 50px;
            height: 50px;
            object-fit: cover;
            border-radius: 4px;
        }
        .status-badge {
            min-width: 100px;
            text-align: center;
        }
    </style>
{% endblock %}

{% block body %}
<div class="container py-4">
    <h1 class="mb-4">Gérer les réservations</h1>

    {% for message in app.flashes('success') %}
        <div class="alert alert-success">
            {{ message }}
        </div>
    {% endfor %}

    {% for message in app.flashes('error') %}
        <div class="alert alert-danger">
            {{ message }}
        </div>
    {% endfor %}

    <div class="card mb-4">
        <div class="card-body">
            <div class="row g-3">
                <div class="col-md-4">
                    <div class="input-group">
                        <input type="text" id="search-input" class="form-control" placeholder="Rechercher par modèle de voiture...">
                        <button class="btn btn-outline-secondary" type="button" id="voice-search-btn">
                            <i class="fas fa-microphone"></i>
                        </button>
                    </div>
                </div>
                <div class="col-md-4">
                    <select id="status-filter" class="form-select">
                        <option value="">Statut</option>
                        <option value="en attente">En attente</option>
                        <option value="confirmée">Confirmée</option>
                        <option value="annulée">Annulée</option>
                    </select>
                </div>
                <div class="col-md-4">
                    <select id="date-filter" class="form-select">
                        <option value="">Période</option>
                        <option value="today">Aujourd'hui</option>
                        <option value="week">Cette semaine</option>
                        <option value="month">Ce mois</option>
                        <option value="future">À venir</option>
                        <option value="past">Passées</option>
                    </select>
                </div>
            </div>
        </div>
    </div>

    <div class="table-responsive">
        <table class="table table-striped table-hover" id="reservations-table">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Utilisateur</th>
                    <th>Voiture</th>
                    <th>Dates</th>
                    <th>Prix total</th>
                    <th>Statut</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                {% for reservation in reservations %}
                    <tr class="reservation-item"
                        data-car="{{ reservation.car.model|lower }}"
                        data-status="{{ reservation.status|lower }}"
                        data-start-date="{{ reservation.startDate|date('Y-m-d') }}"
                        data-end-date="{{ reservation.endDate|date('Y-m-d') }}">
                        <td>{{ reservation.id }}</td>
                        <td>Utilisateur #{{ reservation.user.id }}</td>
                        <td>
                            <div class="d-flex align-items-center">
                                <img src="{{ reservation.car.image }}" alt="{{ reservation.car.model }}" class="car-image me-2">
                                {{ reservation.car.model }}
                            </div>
                        </td>
                        <td>
                            <div>Du {{ reservation.startDate|date('d/m/Y') }}</div>
                            <div>Au {{ reservation.endDate|date('d/m/Y') }}</div>
                        </td>
                        <td>{{ reservation.totalPrice }}€</td>
                        <td>
                            <span class="badge status-badge {% if reservation.status == 'Confirmée' %}bg-success{% elseif reservation.status == 'En attente' %}bg-warning{% else %}bg-secondary{% endif %}">
                                {{ reservation.status }}
                            </span>
                        </td>
                        <td>
                            <div class="btn-group">
                                <a href="{{ path('reservations_admin_edit', {'id': reservation.id}) }}" class="btn btn-sm btn-outline-primary">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <button type="button" class="btn btn-sm btn-outline-danger" data-bs-toggle="modal" data-bs-target="#deleteModal{{ reservation.id }}">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>

                            <!-- Modal de confirmation de suppression -->
                            <div class="modal fade" id="deleteModal{{ reservation.id }}" tabindex="-1" aria-labelledby="deleteModalLabel{{ reservation.id }}" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <h5 class="modal-title" id="deleteModalLabel{{ reservation.id }}">Confirmer la suppression</h5>
                                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                        </div>
                                        <div class="modal-body">
                                            Êtes-vous sûr de vouloir supprimer cette réservation ?
                                            <br>
                                            <strong>Cette action est irréversible.</strong>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Annuler</button>
                                            <form action="{{ path('reservations_delete', {'id': reservation.id}) }}" method="post" class="d-inline">
                                                <input type="hidden" name="_method" value="DELETE">
                                                <input type="hidden" name="_token" value="{{ csrf_token('delete' ~ reservation.id) }}">
                                                <button type="submit" class="btn btn-danger">Confirmer la suppression</button>
                                            </form>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </td>
                    </tr>
                {% else %}
                    <tr>
                        <td colspan="7" class="text-center">Aucune réservation trouvée</td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>

    <div class="mt-4">
        <a href="{{ path('cars_list') }}" class="btn btn-primary">
            <i class="fas fa-plus me-2"></i>Nouvelle réservation
        </a>
    </div>
</div>
{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.getElementById('search-input');
    const voiceSearchBtn = document.getElementById('voice-search-btn');
    const statusFilter = document.getElementById('status-filter');
    const dateFilter = document.getElementById('date-filter');
    const reservationItems = document.querySelectorAll('.reservation-item');

    // Voice search functionality
    if ('webkitSpeechRecognition' in window) {
        const recognition = new webkitSpeechRecognition();
        recognition.continuous = false;
        recognition.interimResults = false;
        recognition.lang = 'fr-FR';

        voiceSearchBtn.addEventListener('click', () => {
            try {
                recognition.start();
                voiceSearchBtn.classList.add('btn-primary');
                voiceSearchBtn.classList.remove('btn-outline-secondary');
            } catch (e) {
                console.error('Error starting voice recognition:', e);
            }
        });

        recognition.onresult = (event) => {
            const transcript = event.results[0][0].transcript;
            searchInput.value = transcript;
            filterReservations();
            voiceSearchBtn.classList.remove('btn-primary');
            voiceSearchBtn.classList.add('btn-outline-secondary');
        };

        recognition.onerror = () => {
            voiceSearchBtn.classList.remove('btn-primary');
            voiceSearchBtn.classList.add('btn-outline-secondary');
        };
    } else {
        voiceSearchBtn.style.display = 'none';
    }

    // Filter functionality
    function filterReservations() {
        const searchTerm = searchInput.value.toLowerCase();
        const statusFilterValue = statusFilter.value.toLowerCase();
        const dateFilterValue = dateFilter.value;
        const today = new Date();
        today.setHours(0, 0, 0, 0);

        reservationItems.forEach(item => {
            const carModel = item.dataset.car;
            const status = item.dataset.status;
            const startDate = new Date(item.dataset.startDate);
            const endDate = new Date(item.dataset.endDate);
            let show = true;

            // Search filter
            if (searchTerm && !carModel.includes(searchTerm)) {
                show = false;
            }

            // Status filter
            if (statusFilterValue && status !== statusFilterValue) {
                show = false;
            }

            // Date filter
            if (dateFilterValue) {
                switch (dateFilterValue) {
                    case 'today':
                        show = startDate <= today && endDate >= today;
                        break;
                    case 'week':
                        const weekStart = new Date(today);
                        weekStart.setDate(today.getDate() - today.getDay());
                        const weekEnd = new Date(weekStart);
                        weekEnd.setDate(weekStart.getDate() + 6);
                        show = (startDate >= weekStart && startDate <= weekEnd) || 
                               (endDate >= weekStart && endDate <= weekEnd);
                        break;
                    case 'month':
                        const monthStart = new Date(today.getFullYear(), today.getMonth(), 1);
                        const monthEnd = new Date(today.getFullYear(), today.getMonth() + 1, 0);
                        show = (startDate >= monthStart && startDate <= monthEnd) || 
                               (endDate >= monthStart && endDate <= monthEnd);
                        break;
                    case 'future':
                        show = startDate > today;
                        break;
                    case 'past':
                        show = endDate < today;
                        break;
                }
            }

            item.style.display = show ? '' : 'none';
        });
    }

    searchInput.addEventListener('input', filterReservations);
    statusFilter.addEventListener('change', filterReservations);
    dateFilter.addEventListener('change', filterReservations);
});
</script>
{% endblock %} 