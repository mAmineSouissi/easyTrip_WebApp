{% extends 'base.html.twig' %}

{% block title %}{{ ticket.idTicket ? 'Modifier' : 'Créer' }} un Ticket{% endblock %}

{% block stylesheets %}
{{ parent() }}
<style>
    .ticket-form-container {
        padding: 2rem;
    }
    .form-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
    }
    .form-title {
        display: flex;
        align-items: center;
        gap: 1rem;
    }
    .form-card {
        background-color: white;
        border-radius: 0.5rem;
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
    }
    .form-card-header {
        background-color: #f8f9fa;
        padding: 1rem;
        border-bottom: 1px solid #dee2e6;
        border-radius: 0.5rem 0.5rem 0 0;
    }
    .form-card-body {
        padding: 2rem;
    }
    .form-group {
        margin-bottom: 1.5rem;
    }
    .form-label {
        font-weight: 600;
        margin-bottom: 0.5rem;
    }
    .form-control, .form-select {
        border-radius: 0.25rem;
        padding: 0.5rem 0.75rem;
    }
    .form-control:focus, .form-select:focus {
        border-color: #80bdff;
        box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
    }
    .btn-submit {
        background-color: #28a745;
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 0.25rem;
        border: none;
        font-weight: 600;
    }
    .btn-submit:hover {
        background-color: #218838;
    }
    .current-image {
        max-width: 200px;
        margin-top: 1rem;
        border-radius: 0.25rem;
    }
    .invalid-feedback {
        color: #dc3545;
        font-size: 0.875rem;
        margin-top: 0.25rem;
    }
</style>
{% endblock %}

{% block body %}
<div class="ticket-form-container">
    <div class="form-header">
        <h1 class="form-title">
            <i class="fas fa-{{ ticket.idTicket ? 'edit' : 'plus' }}"></i>
            {{ ticket.idTicket ? 'Modifier' : 'Créer' }} un Ticket
        </h1>
        <a href="{{ path('app_offer_ticket_index') }}" class="btn btn-secondary">
            <i class="fas fa-arrow-left"></i> Retour
        </a>
    </div>

    <div class="form-card">
        <div class="form-card-header">
            <h2 class="h5 mb-0">Informations du ticket</h2>
        </div>
        <div class="form-card-body">
            {{ form_start(form, {'attr': {'class': 'needs-validation', 'novalidate': '', 'id': 'ticketForm'}}) }}
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            {{ form_label(form.flightNumber) }}
                            {{ form_widget(form.flightNumber, {'attr': {'class': 'form-control'}}) }}
                            <div class="invalid-feedback">
                                {{ form_errors(form.flightNumber) }}
                            </div>
                        </div>

                        <div class="form-group">
                            {{ form_label(form.airline) }}
                            {{ form_widget(form.airline, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.airline) }}
                        </div>

                        <div class="form-group">
                            {{ form_label(form.departureCity) }}
                            {{ form_widget(form.departureCity, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.departureCity) }}
                        </div>

                        <div class="form-group">
                            {{ form_label(form.arrivalCity) }}
                            {{ form_widget(form.arrivalCity, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.arrivalCity) }}
                        </div>

                        <div class="form-group">
                            {{ form_label(form.departureDate) }}
                            {{ form_widget(form.departureDate, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.departureDate) }}
                        </div>

                        <div class="form-group">
                            {{ form_label(form.departureTime) }}
                            {{ form_widget(form.departureTime, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.departureTime) }}
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group">
                            {{ form_label(form.arrivalDate) }}
                            {{ form_widget(form.arrivalDate, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.arrivalDate) }}
                        </div>

                        <div class="form-group">
                            {{ form_label(form.arrivalTime) }}
                            {{ form_widget(form.arrivalTime, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.arrivalTime) }}
                        </div>

                        <div class="form-group">
                            {{ form_label(form.ticketClass) }}
                            {{ form_widget(form.ticketClass, {'attr': {'class': 'form-select'}}) }}
                            {{ form_errors(form.ticketClass) }}
                        </div>

                        <div class="form-group">
                            {{ form_label(form.price) }}
                            {{ form_widget(form.price, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.price) }}
                        </div>

                        <div class="form-group">
                            {{ form_label(form.ticketType) }}
                            {{ form_widget(form.ticketType, {'attr': {'class': 'form-select'}}) }}
                            {{ form_errors(form.ticketType) }}
                        </div>

                        <div class="form-group">
                            {{ form_label(form.imageAirline) }}
                            {{ form_widget(form.imageAirline, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.imageAirline) }}
                            {% if ticket.imageAirline %}
                                <img src="{{ asset('Uploads/airlines/' ~ ticket.imageAirline) }}" 
                                     alt="Logo compagnie" 
                                     class="current-image">
                            {% endif %}
                        </div>

                        <div class="form-group">
                            {{ form_label(form.cityImage) }}
                            {{ form_widget(form.cityImage, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.cityImage) }}
                            {% if ticket.cityImage %}
                                <img src="{{ asset('Uploads/cities/' ~ ticket.cityImage) }}" 
                                     alt="Image ville" 
                                     class="current-image">
                            {% endif %}
                        </div>
                    </div>
                </div>

                <div class="form-group text-end">
                    <button type="submit" class="btn btn-submit">
                        <i class="fas fa-save"></i> {{ ticket.idTicket ? 'Modifier' : 'Créer' }}
                    </button>
                </div>
            {{ form_end(form) }}
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('ticketForm');
    const inputs = form.querySelectorAll('input, select');

    // Fonction pour afficher une alerte
    function showAlert(message, type = 'error') {
        // Supprimer les alertes existantes
        const existingAlerts = document.querySelectorAll('.alert');
        existingAlerts.forEach(alert => alert.remove());

        const alertDiv = document.createElement('div');
        alertDiv.className = `alert alert-${type === 'error' ? 'danger' : 'success'} alert-dismissible fade show`;
        alertDiv.role = 'alert';
        alertDiv.innerHTML = `
            <i class="fas fa-${type === 'error' ? 'exclamation-circle' : 'check-circle'} me-2"></i>
            ${message}
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        `;
        
        // Insérer l'alerte avant le formulaire
        form.parentNode.insertBefore(alertDiv, form);
        
        // Supprimer l'alerte après 5 secondes
        setTimeout(() => {
            alertDiv.remove();
        }, 5000);
    }

    // Validation des champs lors de la saisie
    inputs.forEach(input => {
        input.addEventListener('input', function() {
            validateField(this);
        });

        // Validation lors de la perte de focus
        input.addEventListener('blur', function() {
            validateField(this);
        });
    });

    function validateField(field) {
        if (!field.checkValidity()) {
            field.classList.add('is-invalid');
            field.classList.remove('is-valid');
            
            let errorMessage = field.validationMessage;
            
            // Messages personnalisés pour les champs numériques
            if (field.type === 'number') {
                if (field.validity.rangeUnderflow) {
                    errorMessage = field.getAttribute('minMessage') || `La valeur doit être supérieure à ${field.min}`;
                } else if (field.validity.rangeOverflow) {
                    errorMessage = field.getAttribute('maxMessage') || `La valeur ne peut pas dépasser ${field.max}`;
                } else if (field.validity.badInput) {
                    errorMessage = 'Veuillez entrer un nombre valide';
                }
            }
            
            showAlert(errorMessage, 'error');
        } else {
            field.classList.remove('is-invalid');
            field.classList.add('is-valid');
        }
    }

    // Validation du formulaire lors de la soumission
    form.addEventListener('submit', function(event) {
        if (!form.checkValidity()) {
            event.preventDefault();
            event.stopPropagation();
            
            // Trouver le premier champ invalide
            const firstInvalid = form.querySelector(':invalid');
            if (firstInvalid) {
                firstInvalid.focus();
                validateField(firstInvalid);
            }
        }
        
        form.classList.add('was-validated');
    });

    // Validation personnalisée pour les heures
    const timeInputs = form.querySelectorAll('input[pattern="^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$"]');
    timeInputs.forEach(input => {
        input.addEventListener('input', function() {
            const timeRegex = /^([0-1]?[0-9]|2[0-3]):[0-5][0-9]$/;
            if (!timeRegex.test(this.value)) {
                this.setCustomValidity('Format d\'heure invalide. Utilisez le format HH:MM (ex: 14:30)');
                showAlert('Format d\'heure invalide. Utilisez le format HH:MM (ex: 14:30)', 'error');
            } else {
                this.setCustomValidity('');
            }
        });
    });
});
</script>
{% endblock %} 