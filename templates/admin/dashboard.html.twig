{% extends 'admin/base.html.twig' %}

{% block title %}Admin Dashboard{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .dashboard-container {
            padding: 20px;
        }
        .stats-cards {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            margin-bottom: 30px;
        }
        .stat-card {
            flex: 1;
            min-width: 200px;
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            padding: 20px;
            text-align: center;
        }
        .stat-card h3 {
            font-size: 2rem;
            margin: 10px 0;
        }
        .chart-controls {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }
        .chart-type-selector {
            display: flex;
            gap: 10px;
        }
        .chart-type-btn {
            padding: 8px 16px;
            border: none;
            background: #f1f1f1;
            border-radius: 4px;
            cursor: pointer;
        }
        .chart-type-btn.active {
            background: #4B70DD;
            color: white;
        }
        .chart-container {
            background: white;
            border-radius: 8px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            padding: 20px;
            height: 400px;
        }
    </style>
{% endblock %}

{% block body %}
    <div class="dashboard-container">
        <h1>Admin Dashboard</h1>
        
        <div class="stats-cards">
            <div class="stat-card">
                <p>Total Users</p>
                <h3 id="totalUsersCount">--</h3>
            </div>
            <div class="stat-card">
                <p>Administrators</p>
                <h3 id="adminCount">--</h3>
            </div>
            <div class="stat-card">
                <p>Clients</p>
                <h3 id="clientCount">--</h3>
            </div>
            <div class="stat-card">
                <p>Other Roles</p>
                <h3 id="otherCount">--</h3>
            </div>
        </div>
        
        <div class="chart-controls">
            <h2>User Role Distribution</h2>
        </div>
        
        <div class="chart-container">
            <canvas id="roleChart"></canvas>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            let chartInstance = null;
            const chartCanvas = document.getElementById('roleChart').getContext('2d');
            let chartData = null;
            
            fetch('{{ path('admin_chart_users_by_role') }}')
                .then(response => response.json())
                .then(data => {
                    chartData = data;
                    updateStatCards(data);
                    createChart('pie', data);
                })
                .catch(error => console.error('Error loading chart data:', error));
            
            function updateStatCards(data) {
                const totalUsers = data.datasets[0].data.reduce((a, b) => a + b, 0);
                document.getElementById('totalUsersCount').textContent = totalUsers;
                
                const adminIndex = data.labels.findIndex(label => label.toUpperCase() === 'ADMIN');
                const adminCount = adminIndex !== -1 ? data.datasets[0].data[adminIndex] : 0;
                document.getElementById('adminCount').textContent = adminCount;
                
                const clientIndex = data.labels.findIndex(label => label.toUpperCase() === 'CLIENT');
                const clientCount = clientIndex !== -1 ? data.datasets[0].data[clientIndex] : 0;
                document.getElementById('clientCount').textContent = clientCount;
                
                const otherCount = totalUsers - adminCount - clientCount;
                document.getElementById('otherCount').textContent = otherCount;
            }
            
            function createChart(type, data) {
                
                const options = {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'top',
                        },
                        title: {
                            display: true,
                            text: 'User Distribution by Role',
                            font: {
                                size: 16
                            }
                        },
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    const label = context.label || '';
                                    const value = context.raw;
                                    const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                    const percentage = Math.round((value / total) * 100);
                                    return `${label}: ${value} users (${percentage}%)`;
                                }
                            }
                        }
                    }
                };
                
                // Create new chart
                console.log('Creating chart with type:', type);
                chartInstance = new Chart(chartCanvas, {
                    type: 'pie',
                    data: data,
                    options: options
                });
            }
        });
    </script>
{% endblock %}